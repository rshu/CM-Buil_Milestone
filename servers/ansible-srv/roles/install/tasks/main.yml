---
  - name: Set root password
    become: yes
    debconf:
      name: 'mysql-server'
      question: 'mysql-server/root_password'
      value: '{{mysql_password}}'
      vtype: 'password'
    
  - name: Set root password again
    become: yes
    debconf:
      name: 'mysql-server'
      question: 'mysql-server/root_password_again'
      value: '{{mysql_password}}'
      vtype: 'password'

  - name: Install Python PIP RPMs
    become: true
    package:
      name: python3-pip
      state: present

  - name: Install Several Packages
    become: yes
    apt:
      name: ['wget','npm','nodejs-legacy','maven','mongodb', 'mysql-server', 'nginx']

  - name: Allow port 80
    become: yes
    ufw:
      rule: allow
      port: 80

  - name: Allow open ssh
    become: yes
    ufw:
      rule: allow
      name: OpenSSH

  - name: Allow everything and enable UFW
    become: yes
    ufw:
      state: enabled

  - name: Allow 'Nginx HTTP'
    become: yes
    ufw:
      rule: allow
      name: 'Nginx HTTP'

  - name: Allow port 3002
    become: yes
    ufw:
      rule: allow
      port: 3002

  - name: Allow port 27017
    become: yes
    ufw:
      rule: allow
      port: 27017

  - name: Install the latest pymongo package
    pip: name=pymongo state=latest use_mirrors=no

  - name: Create MongoDB root user siteRootAdmin
    mongodb_user:
      login_port: 27017
      database: admin
      name: myUserAdmin
      password: abc123
      roles: root

  - name: Create MongoDB administrative user siteUserAdmin
    mongodb_user:
      login_user: myUserAdmin
      login_password: abc123
      login_port: 27017
      database: admin
      name: myUserAdmin
      password: abc123
      roles:
        - { db: "admin", role: "userAdminAnyDatabase" }

  - name: Install python-mysql
    apt: pkg=python3-pymysql state=present update_cache=yes
    become: yes

  - name: update mysql root password for root
    mysql_user: 
      name: root
      host: localhost
      login_user: root
      login_password: "{{ mysql_password }}"
      check_implicit_admin: yes
      priv: "*.*:ALL,GRANT"

  - name: Install chai
    become: yes
    npm:
      name: 'chai'
      path: /app/location

  - name: Install fs
    become: yes
    npm:
      name: 'fs'
      path: /app/location

  - name: Install assert
    become: yes
    npm:
      name: 'assert'
      path: /app/location

  - name: Install got
    become: yes
    npm:
      name: 'got'
      path: /app/location

  - name: Install mocha
    become: yes
    npm:
      name: 'mocha'
      path: /app/location


  - name: Install request
    become: yes
    npm:
      name: 'request'
      path: /app/location
      
  - name: Install pm2
    become: yes
    npm:
      name: 'pm2'
      path: /app/location

  - name: change bashrc
    blockinfile:
      path: '~/.bashrc'
      block: |
            export MONGO_PORT=27017
            export MONGO_IP=127.0.0.1
            export MONGO_USER=myUserAdmin
            export MONGO_PASSWORD=abc123
            export MAIL_USER=csc519s19.rshu
            export MAIL_PASSWORD=devops2019!
            export MAIL_SMTP=smtp.gmail.com
            export APP_PORT=3002
      insertbefore: EOF

  - name: Copy default to /etc/nginx/sites-available/default
    become: yes
    template: src=template/default dest=/etc/nginx/sites-available/default

  - name: Copy nginx.conf to /etc/nginx/nginx.conf
    become: yes
    template: src=template/nginx.conf dest=/etc/nginx/nginx.conf

  - name: restart nginx
    become: yes
    service:
      name: nginx
      state: restarted

  - name: installing jenkins job builder
    pip:
      name: jenkins-job-builder

  - name: Creates directory
    become: yes 
    file:
      path: /etc/jenkins_jobs
      state: directory

  - name: copy file to etc/jenkins_jobs
    become: yes
    template: src=jenkins_jobs.ini dest=/etc/jenkins_jobs/jenkins_jobs.ini

  - name: Creates directory
    become: yes 
    file:
      path: jobs
      state: directory

  - name: copy iTrust.yaml file to jobs folder
    become: yes
    template: src=iTrust.yaml dest=jobs

  - name: copy defaults.yaml file to jobs folder
    become: yes
    template: src=defaults.yaml dest=jobs

  - name: copy checkbox.yaml file to jobs folder
    become: yes
    template: src=checkbox.yaml dest=jobs

  - name: update jobs
    become: yes
    register: update_jobs
    shell: sh /home/vagrant/test.sh
    failed_when: update_jobs.rc != 1 and update_jobs.rc != 0